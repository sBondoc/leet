#include <stdio.h>
#include <stdlib.h>

struct Node
{
	int data;
	struct Node *next;
};

void print_list(struct Node **head)
{
	printf("{");
	struct Node *n = *head;
	while (n != NULL)
	{
		printf("%d, ", n->data);
		n = n->next;
	}
	printf("\b\b}\n");
}

void delete_list(struct Node **head)
{
	struct Node *n = *head;
	struct Node *next = NULL;
	while (n != NULL)
	{
		next = n->next;
		free(n);
		n = next;
	}
}

struct Node *node_new(void)
{
	struct Node *new = NULL;
	new = malloc(sizeof(struct Node));
	if (new == NULL)
	{
		perror("Memory allocation failed. Try downloading more RAM.\n");
	}
	new->data = -1;
	new->next = NULL;
	return new;
}

void push_node(struct Node **head, int data)
{
	struct Node *new = NULL;
	new = node_new();
	new->data = data;
	if (*head == NULL)
	{
		*head = new;
	}
	else if (((*head)->data < 0) || (9 < (*head)->data))
	{
		(*head)->data = data;
		free(new);
	}
	else
	{
		struct Node *n = *head;
		while (n->next != NULL)
		{
			n = n->next; 
		}
		n->next = new;
	}
}

struct Node *int_to_list(int n)
{
	struct Node *head = NULL;
	head = node_new();
	head->data = -1;
	if (n == 0)
	{
		head->data = 0;
	}
	else
	{
		while (0 < n)
		{
			push_node(&head, n % 10);
			n /= 10;
		}
	}
	return head;
}

int list_to_int(struct Node **head)
{
	struct Node *n = *head;
	int result = 0;
	for (int e = 1; n != NULL; e *= 10)
	{
		result += n->data * e;
		n = n->next;
	}
	return result;	
}

struct Node *add(struct Node *list_a, struct Node *list_b)
{
	int a = list_to_int(&list_a), b = list_to_int(&list_b);
	printf("%d + %d = %d\n", a, b, a + b);
	return int_to_list(a + b);
}

int main(int argc, char *argv[])
{
	struct Node *head1 = int_to_list(342), *head2 = int_to_list(465), *result;
	result = add(head1, head2);
	print_list(&result);
	delete_list(&head1);
	delete_list(&head2);
	delete_list(&result);
	return EXIT_SUCCESS;
}
